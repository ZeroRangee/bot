# Generated by Django 5.2.3 on 2025-06-25 00:16

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("chat", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ScrapedContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField()),
                ("title", models.CharField(max_length=500)),
                ("content", models.TextField()),
                ("scraped_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["-scraped_at"],
            },
        ),
        migrations.RemoveField(
            model_name="message",
            name="telegram_user_id",
        ),
        migrations.RemoveField(
            model_name="message",
            name="telegram_username",
        ),
        migrations.AddField(
            model_name="message",
            name="message_type",
            field=models.CharField(
                choices=[
                    ("chat", "Обычное сообщение"),
                    ("ai_question", "ИИ вопрос"),
                    ("admin_broadcast", "Рассылка админа"),
                ],
                default="chat",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="message",
            name="telegram_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="chat.telegramuser",
            ),
        ),
        migrations.AddField(
            model_name="telegramuser",
            name="user_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("applicant", "Абитуриент"),
                    ("student", "Студент"),
                    ("admin", "Администратор"),
                ],
                max_length=20,
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="ApplicantProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "school_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("graduation_year", models.IntegerField(blank=True, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "desired_faculty",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "telegram_user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="chat.telegramuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BroadcastMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("message_text", models.TextField()),
                (
                    "target_user_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("applicant", "Абитуриент"),
                            ("student", "Студент"),
                            ("admin", "Администратор"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("sent_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_users",
                    models.ManyToManyField(blank=True, to="chat.telegramuser"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_type",
                    models.CharField(
                        choices=[
                            ("general", "Общий чат"),
                            ("admission", "Приемная комиссия"),
                            ("ai_chat", "ИИ чат"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "telegram_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="chat.telegramuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("passport", "Паспорт"),
                            ("education_cert", "Аттестат об образовании"),
                            ("photo", "Фотография"),
                            ("medical_cert", "Медицинская справка"),
                            ("military_id", "Военный билет (для мужчин)"),
                            ("other", "Другое"),
                        ],
                        max_length=20,
                    ),
                ),
                ("file_id", models.CharField(max_length=500)),
                ("file_name", models.CharField(max_length=200)),
                ("file_size", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "telegram_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="chat.telegramuser",
                    ),
                ),
            ],
        ),
    ]
