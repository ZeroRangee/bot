# Generated by Django 5.2.3 on 2025-06-25 01:32

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("chat", "0002_scrapedcontent_remove_message_telegram_user_id_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Classroom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "building",
                    models.CharField(default="Главный корпус", max_length=100),
                ),
                ("floor", models.IntegerField(blank=True, null=True)),
                ("capacity", models.IntegerField(default=30)),
                ("equipment", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="StudentGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("course", models.CharField(max_length=20)),
                ("faculty", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("department", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.AlterField(
            model_name="chatsession",
            name="session_type",
            field=models.CharField(
                choices=[
                    ("general", "Общий чат"),
                    ("admission", "Приемная комиссия"),
                    ("ai_chat", "ИИ чат"),
                    ("schedule", "Расписание"),
                ],
                default="general",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="message",
            name="message_type",
            field=models.CharField(
                choices=[
                    ("chat", "Обычное сообщение"),
                    ("ai_question", "ИИ вопрос"),
                    ("admin_broadcast", "Рассылка админа"),
                    ("schedule_request", "Запрос расписания"),
                ],
                default="chat",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_id", models.CharField(blank=True, max_length=20, null=True)),
                ("full_name", models.CharField(blank=True, max_length=200, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("course", models.CharField(blank=True, max_length=10, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="chat.studentgroup",
                    ),
                ),
                (
                    "telegram_user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="chat.telegramuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ScheduleEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.CharField(max_length=20)),
                ("subject", models.CharField(max_length=200)),
                (
                    "lesson_type",
                    models.CharField(
                        choices=[
                            ("lecture", "Лекция"),
                            ("practice", "Практика"),
                            ("laboratory", "Лабораторная"),
                            ("seminar", "Семинар"),
                            ("exam", "Экзамен"),
                            ("consultation", "Консультация"),
                        ],
                        default="lecture",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_cancelled", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "classroom",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chat.classroom"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="chat.studentgroup",
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="chat.teacher"
                    ),
                ),
            ],
            options={
                "ordering": ["date", "time"],
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="chat.studentgroup",
                    ),
                ),
            ],
            options={
                "unique_together": {("group", "date")},
            },
        ),
    ]
