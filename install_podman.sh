#!/bin/bash

# MVEU Telegram Bot - Podman Installation Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Podman –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo "========================================"
echo -e "${BLUE}üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Podman –¥–ª—è MVEU Bot${NC}"
echo "========================================"

# Detect OS
detect_os() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        if [ -f /etc/debian_version ]; then
            OS="debian"
        elif [ -f /etc/redhat-release ]; then
            OS="redhat"
        elif [ -f /etc/arch-release ]; then
            OS="arch"
        else
            OS="linux"
        fi
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        OS="macos"
    else
        OS="unknown"
    fi
    echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞: $OS"
}

# Install Podman on Ubuntu/Debian
install_debian() {
    echo -e "${BLUE}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Podman –Ω–∞ Ubuntu/Debian...${NC}"
    
    # Update package list
    sudo apt update
    
    # Install dependencies
    sudo apt install -y \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        lsb-release
    
    # Add repository for newer Podman versions
    echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_$(lsb_release -rs)/ /" | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    curl -L "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_$(lsb_release -rs)/Release.key" | sudo apt-key add -
    
    # Update and install
    sudo apt update
    sudo apt install -y podman
    
    # Install podman-compose
    sudo apt install -y python3-pip
    pip3 install podman-compose
    
    echo -e "${GREEN}‚úÖ Podman —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ Ubuntu/Debian${NC}"
}

# Install Podman on CentOS/RHEL/Fedora
install_redhat() {
    echo -e "${BLUE}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Podman –Ω–∞ CentOS/RHEL/Fedora...${NC}"
    
    # Determine package manager
    if command -v dnf >/dev/null 2>&1; then
        PKG_MGR="dnf"
    else
        PKG_MGR="yum"
    fi
    
    # Install Podman
    sudo $PKG_MGR install -y podman
    
    # Install Python and pip if not available
    sudo $PKG_MGR install -y python3 python3-pip
    
    # Install podman-compose
    pip3 install --user podman-compose
    
    echo -e "${GREEN}‚úÖ Podman —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ RedHat/CentOS/Fedora${NC}"
}

# Install Podman on Arch Linux
install_arch() {
    echo -e "${BLUE}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Podman –Ω–∞ Arch Linux...${NC}"
    
    # Update package database
    sudo pacman -Sy
    
    # Install Podman
    sudo pacman -S --noconfirm podman
    
    # Install podman-compose from AUR (if yay is available)
    if command -v yay >/dev/null 2>&1; then
        yay -S --noconfirm podman-compose
    else
        # Install with pip
        sudo pacman -S --noconfirm python-pip
        pip install --user podman-compose
    fi
    
    echo -e "${GREEN}‚úÖ Podman —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ Arch Linux${NC}"
}

# Install Podman on macOS
install_macos() {
    echo -e "${BLUE}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Podman –Ω–∞ macOS...${NC}"
    
    # Check if Homebrew is installed
    if ! command -v brew >/dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  Homebrew –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...${NC}"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    
    # Install Podman
    brew install podman
    
    # Install podman-compose
    pip3 install podman-compose
    
    # Initialize Podman machine
    echo -e "${BLUE}üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Podman –º–∞—à–∏–Ω—ã...${NC}"
    podman machine init
    podman machine start
    
    echo -e "${GREEN}‚úÖ Podman —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ macOS${NC}"
}

# Setup Podman for rootless mode
setup_rootless() {
    echo -e "${BLUE}üè† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ rootless —Ä–µ–∂–∏–º–∞...${NC}"
    
    # Add user to subuid/subgid if not present
    if ! grep -q "^$USER:" /etc/subuid; then
        echo "$USER:100000:65536" | sudo tee -a /etc/subuid
    fi
    
    if ! grep -q "^$USER:" /etc/subgid; then
        echo "$USER:100000:65536" | sudo tee -a /etc/subgid
    fi
    
    # Enable lingering for systemd
    if command -v loginctl >/dev/null 2>&1; then
        loginctl enable-linger $USER
    fi
    
    # Configure storage if needed
    mkdir -p ~/.config/containers
    if [ ! -f ~/.config/containers/storage.conf ]; then
        cat > ~/.config/containers/storage.conf << EOF
[storage]
driver = "overlay"
runroot = "/run/user/\$UID/containers"
graphroot = "\$HOME/.local/share/containers/storage"

[storage.options]
mount_program = "/usr/bin/fuse-overlayfs"
EOF
    fi
    
    echo -e "${GREEN}‚úÖ Rootless —Ä–µ–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
}

# Test Podman installation
test_podman() {
    echo -e "${BLUE}üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Podman...${NC}"
    
    # Test Podman
    if podman --version; then
        echo -e "${GREEN}‚úÖ Podman —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "${RED}‚ùå Podman –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        return 1
    fi
    
    # Test podman-compose
    if command -v podman-compose >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ podman-compose –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    elif podman compose version >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π podman compose –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  podman-compose –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–æ–≤–∫–∞...${NC}"
        pip3 install --user podman-compose
    fi
    
    # Test with hello-world
    echo -e "${BLUE}üåç –¢–µ—Å—Ç —Å hello-world –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º...${NC}"
    if podman run --rm hello-world; then
        echo -e "${GREEN}‚úÖ Podman –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª, –Ω–æ Podman —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
}

# Create data directories for volumes
create_data_dirs() {
    echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –¥–∞–Ω–Ω—ã—Ö...${NC}"
    
    mkdir -p data/{postgres,redis,static,media}
    chmod 755 data
    chmod 755 data/*
    
    echo -e "${GREEN}‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã${NC}"
}

# Main installation function
main() {
    detect_os
    
    case $OS in
        "debian")
            install_debian
            ;;
        "redhat")
            install_redhat
            ;;
        "arch")
            install_arch
            ;;
        "macos")
            install_macos
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞${NC}"
            echo -e "${YELLOW}üìã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Podman –≤—Ä—É—á–Ω—É—é:${NC}"
            echo "https://podman.io/getting-started/installation"
            exit 1
            ;;
    esac
    
    # Setup rootless mode
    setup_rootless
    
    # Create data directories
    create_data_dirs
    
    # Test installation
    test_podman
    
    echo ""
    echo -e "${GREEN}üéâ Podman —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    echo "========================================"
    echo -e "${BLUE}üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./start.sh"
    echo "2. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞"
    echo "3. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8001"
    echo ""
    echo -e "${YELLOW}üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo "‚Ä¢ podman ps              - —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "‚Ä¢ podman images          - —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–∑–æ–≤"
    echo "‚Ä¢ podman system info     - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"
    echo "‚Ä¢ podman machine start   - –∑–∞–ø—É—Å–∫ –º–∞—à–∏–Ω—ã (macOS)"
    echo "========================================"
}

# Handle signals gracefully
trap 'echo -e "\n${YELLOW}üõë –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞...${NC}"; exit 1' SIGTERM SIGINT

# Run main function
main "$@"