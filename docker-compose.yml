version: '3.8'

services:
  # Redis for Django Channels
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database (optional - can use SQLite instead)
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: mveu_bot
      POSTGRES_USER: mveu_user
      POSTGRES_PASSWORD: mveu_secure_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mveu_user -d mveu_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - postgres  # Only start with --profile postgres

  # Django Application
  web:
    build: .
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      # Django settings
      DEBUG: "True"
      SECRET_KEY: "django-insecure-docker-development-key-change-in-production"
      ALLOWED_HOSTS: "*"
      
      # Database settings (uncomment for PostgreSQL)
      # DATABASE_URL: "postgresql://mveu_user:mveu_password@postgres:5432/mveu_bot"
      
      # Redis settings
      REDIS_URL: "redis://redis:6379/0"
      
      # Telegram Bot settings
      TELEGRAM_BOT_TOKEN: "7510155003:AAHxU-SkAlo5yN1SoHVzom3b9LIZv-JhPK8"
      
      # OpenAI settings (add your key here)
      OPENAI_API_KEY: ""
      
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      redis:
        condition: service_healthy
      # postgres:
      #   condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/users/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx for serving static files and reverse proxy (optional)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    name: mveu_network